/*
Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай 
(можно представить её в виде массива видов чая, которые хотят заказать).
Необходимо последовательно выводить в консоль сколько заплатит покупатель 
(необходимо вывести его номер по порядку, чай, который он заказал, и стоимость).
*/

var teaCollect = ["Чёрный чай": 100, "Зелёный чай": 80, "Красный чай": 120] 

var orders: [String] = ["Зелёный чай", "Зелёный чай", "Красный чай", "Чёрный чай", "Белый чай", "Чёрный чай"]

for (index, value) in orders.enumerated() {
    if let price = teaCollect[value] { 
        print("Клиент №\(index+1) заказал \(value), цена = \(price) руб.")
    } else {
        print("Нет такой позиции - \(value)")
    }
}

/*
Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
Необходимо создать новый массив, который будет состоять из элементов старого, 
но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.
*/

var arr = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
var newArr = arr.compactMap{$0}.filter{$0 != 0}.filter{$0 != 4}.sorted(by:<) // compactMap удаляет все nil, два фильтра для интов и сортировка
print(newArr)

/*
Написать функцию, которая на вход принимает целое число, а возвращает массив, 
который сформирован по следующим правилам: количество элементов соответствует 
переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.
*/

createArr(sizeArr:9)
func createArr(sizeArr: Int)-> [Int]{
    var arr = [1]
    for i in 1...sizeArr{
        arr.append(arr[i-1]*2)
    }
    print(arr)
    return arr
}